// =============================================
// K·∫æT N·ªêI MYSQL DATABASE - LAG VINTAGE SHOP
// =============================================

require('dotenv').config(); // Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
const mysql = require('mysql2');

// C·∫•u h√¨nh k·∫øt n·ªëi database t·ª´ .env
const dbConfig = {
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || 'TVU@842004',
    database: process.env.DB_NAME || 'lag_vintage_shop',
    port: process.env.DB_PORT || 3306,
    charset: 'utf8mb4',          // H·ªó tr·ª£ ti·∫øng Vi·ªát
    timezone: '+07:00'           // M√∫i gi·ªù Vi·ªát Nam
};

// T·∫°o connection pool (khuy·∫øn ngh·ªã cho production)
const pool = mysql.createPool({
    ...dbConfig,
    waitForConnections: true,    // Ch·ªù k·∫øt n·ªëi n·∫øu pool ƒë·∫ßy
    connectionLimit: 10,         // S·ªë k·∫øt n·ªëi t·ªëi ƒëa
    queueLimit: 0,              // Kh√¥ng gi·ªõi h·∫°n queue
    enableKeepAlive: true,      // Gi·ªØ k·∫øt n·ªëi
    keepAliveInitialDelay: 0,
    charset: 'utf8mb4'          // ƒê·∫£m b·∫£o charset UTF-8 (collation ƒë∆∞·ª£c x·ª≠ l√Ω t·ª± ƒë·ªông)
});

// Promise wrapper ƒë·ªÉ s·ª≠ d·ª•ng async/await
const promisePool = pool.promise();

// Test k·∫øt n·ªëi
pool.getConnection((err, connection) => {
    if (err) {
        console.error('‚ùå L·ªói k·∫øt n·ªëi database:', err.message);
        
        if (err.code === 'PROTOCOL_CONNECTION_LOST') {
            console.error('   M·∫•t k·∫øt n·ªëi database.');
        }
        if (err.code === 'ER_CON_COUNT_ERROR') {
            console.error('   Database c√≥ qu√° nhi·ªÅu k·∫øt n·ªëi.');
        }
        if (err.code === 'ECONNREFUSED') {
            console.error('   K·∫øt n·ªëi database b·ªã t·ª´ ch·ªëi. Ki·ªÉm tra MySQL ƒë√£ ch·∫°y ch∆∞a.');
        }
        if (err.code === 'ER_BAD_DB_ERROR') {
            console.error('   Database "lag_vintage_shop" kh√¥ng t·ªìn t·∫°i.');
            console.log('   üëâ Ch·∫°y l·ªánh: mysql -u root -p < database_design.sql');
        }
    } else {
        console.log('‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!');
        console.log('   üì¶ Database: lag_vintage_shop');
        console.log('   üîó Host: localhost:3306');
        connection.release(); // Gi·∫£i ph√≥ng k·∫øt n·ªëi
    }
});

// Export pool ƒë·ªÉ s·ª≠ d·ª•ng trong c√°c file kh√°c
module.exports = {
    pool: promisePool,  // Export promisePool as pool (ƒë·ªÉ d√πng async/await)
    promisePool,        // Promise pool (d√πng async/await)
    dbConfig           // C·∫•u h√¨nh (d√πng cho testing)
};
